<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.gutter.mapper.MemberMapper">
	<!-- 아이디 중복 검사 -->
	<select id="idCheck" parameterType="String" resultType="int">
		select count(id) from member where id = #{id}
	</select>
	<!-- 회원 가입 -->
	<insert id="memberInsert">
	begin
		insert into member (id, password, name, phone, email, regdate)
		values (#{id}, #{password}, #{name}, #{phone}, #{email}, sysdate);
		insert into member_auth values (#{id}, 'ROLE_USER');
	end;
	</insert>
	<!-- 로그인 -->
	<select id="memberLogin" resultType="org.gutter.domain.MemberVO">
		select * from member where id = #{id} and password = #{password}
	</select>
	<!-- 멤버 조회 -->
	<select id="memberDetail" resultType="org.gutter.domain.MemberVO">
		select * from member where id = #{id}
	</select>
	<!-- 멤버 수정 -->
	<update id="memberUpdate">
		update member set password=#{password}, name=#{name}, phone=#{phone}, email=#{email}, updatedate=sysdate
		where id=#{id}
	</update> 
	<!-- 멤버 삭제 -->
	<delete id="memberDelete">
	begin
		delete from member_auth where id=#{id};
		delete from member where id=#{id};
	end;
	</delete>
	<!-- 쿼리 결과를 자바의 필드에 매핑처리하는 태그 -->
	<resultMap id="memberMap" 
	           type="org.gutter.domain.MemberVO">
	  <!-- 테이블의 pk를 자바클래스의 사용자 아이디에 매핑 -->
	  <!-- property: MemberVO 클래스의 필드명
	  column: member 테이블의 컬럼명 -->
	  <id property="id" column="id"/>
	  <result property="id" column="id"/>        
	  <result property="password" column="password"/>
	  <result property="name" column="name"/>
	  <result property="phone" column="phone"/>
	  <result property="email" column="email"/>
	  <result property="regDate" column="regdate"/>
	  <result property="updateDate" column="updatedate"/>
	  <result property="enabled" column="enabled" />
	  <result property="grade" column="grade"/>
	  <collection property="authList" resultMap="authMap"/>
	</resultMap>
	
	<!-- 사용자에 권한내역을 테이블에서 가져와서 자바클래스이
	필드에 대입 -->
	<resultMap id="authMap" 
	           type="org.gutter.domain.AuthVO">
	  <result property="id" column="id"/>        
	  <result property="auth" column="auth"/>	           
	</resultMap>
	
	<select id="read" resultMap="memberMap">
		select mem.id,
		       mem.password,
		       mem.name,
		       mem.phone,
		       mem.email,
		       mem.regdate,
		       mem.updatedate,
		       mem.enabled,
		       auth.auth
		  from member mem left outer join member_auth auth
		       on mem.id = auth.id
		 where mem.id = #{id}      
	</select>
	
	<sql id="creteria">
		  <trim prefix="(" suffix=") AND " prefixOverrides="OR">
		  	<foreach collection="typeArr" item="type">
		  		<trim prefix="OR">
		  			<choose>
		  				<when test="type == 'i'.toString()">
		  					id like '%' || #{keyword}||'%'
		  				</when>
		  			</choose>
		  		</trim>
		  	</foreach>
		  </trim>    
	</sql>	
	
	<!-- 관리자 메뉴 멤버 조회 -->
	<!-- 게시물 목록 조회 -->
	<select id="getList" 
	        resultType="org.gutter.domain.MemberVO">
			select * 
			  from member
			  order by regdate desc	
	</select>

	<!-- 페이징 처리 -->	
	<select id="getListWithPaging" resultType="org.gutter.domain.MemberVO">
			<![CDATA[
				   select 
				          rownum rn,id,name,phone,email,regdate
				     from member
			        where
		   ]]>
		  <!-- 위에 선언된 sql 태크의 내용이 추가 -->
		  <include refid="creteria"/>
		  
		  <![CDATA[			        
		         rownum <= #{pageNum} * #{amount}
			 and rownum > (#{pageNum} - 1) * #{amount}               		
		  ]]>
	</select>
	
	<!-- 전체 행수 구하기 -->
	<select id="getTotalCount" resultType="int">
		select count(*)
		  from member
		 where
	<include refid="creteria"/>
		enabled=1
	</select>
</mapper>